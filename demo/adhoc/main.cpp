// Â© Joseph Cameron - All Rights Reserved

#include <gdk/game_loop.h>
#include <gdk/graphics_context.h>
#include <gdk/graphics_types.h>
#include <gdk/model_data.h>
#include <gdk/ext/sprite_animation.h>
#include <gdk/texture_data.h>
#include <gdk/webgl1es2_context.h>
#include <jfc/event.h>
#include <jfc/glfw_window.h>
#include <jfc/to_array.h>

#include <GLFW/glfw3.h>

#include <array>
#include <chrono>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <map>
#include <set>
#include <thread>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>

using namespace gdk;

static const auto PNG = jfc::to_array<texture_data::encoded_byte>({
    0x89U, 0x50U, 0x4eU, 0x47U, 0x0dU, 0x0aU, 0x1aU, 0x0aU, 0x00U, 0x00U, 0x00U, 0x0dU,
    0x49U, 0x48U, 0x44U, 0x52U, 0x00U, 0x00U, 0x00U, 0x40U, 0x00U, 0x00U, 0x00U, 0x40U,
    0x08U, 0x06U, 0x00U, 0x00U, 0x00U, 0xaaU, 0x69U, 0x71U, 0xdeU, 0x00U, 0x00U, 0x00U,
    0x01U, 0x73U, 0x52U, 0x47U, 0x42U, 0x01U, 0xd9U, 0xc9U, 0x2cU, 0x7fU, 0x00U, 0x00U,
    0x00U, 0x04U, 0x67U, 0x41U, 0x4dU, 0x41U, 0x00U, 0x00U, 0xb1U, 0x8fU, 0x0bU, 0xfcU,
    0x61U, 0x05U, 0x00U, 0x00U, 0x00U, 0x20U, 0x63U, 0x48U, 0x52U, 0x4dU, 0x00U, 0x00U,
    0x7aU, 0x26U, 0x00U, 0x00U, 0x80U, 0x84U, 0x00U, 0x00U, 0xfaU, 0x00U, 0x00U, 0x00U,
    0x80U, 0xe8U, 0x00U, 0x00U, 0x75U, 0x30U, 0x00U, 0x00U, 0xeaU, 0x60U, 0x00U, 0x00U,
    0x3aU, 0x98U, 0x00U, 0x00U, 0x17U, 0x70U, 0x9cU, 0xbaU, 0x51U, 0x3cU, 0x00U, 0x00U,
    0x00U, 0x06U, 0x62U, 0x4bU, 0x47U, 0x44U, 0x00U, 0xe0U, 0x00U, 0xa6U, 0x00U, 0x8aU,
    0x01U, 0x0fU, 0x37U, 0x4cU, 0x00U, 0x00U, 0x00U, 0x09U, 0x70U, 0x48U, 0x59U, 0x73U,
    0x00U, 0x00U, 0x0eU, 0xa6U, 0x00U, 0x00U, 0x0eU, 0xa6U, 0x01U, 0x87U, 0xdcU, 0xa9U,
    0x6fU, 0x00U, 0x00U, 0x00U, 0x07U, 0x74U, 0x49U, 0x4dU, 0x45U, 0x07U, 0xe9U, 0x05U,
    0x09U, 0x02U, 0x32U, 0x30U, 0x80U, 0x5aU, 0x90U, 0xa3U, 0x00U, 0x00U, 0x04U, 0x50U,
    0x49U, 0x44U, 0x41U, 0x54U, 0x78U, 0xdaU, 0xedU, 0x5aU, 0xbfU, 0x6bU, 0x1bU, 0x31U,
    0x14U, 0x7eU, 0x36U, 0x47U, 0x86U, 0xd0U, 0xc3U, 0x43U, 0xa1U, 0xa5U, 0x4bU, 0x69U,
    0x12U, 0x12U, 0x48U, 0xe0U, 0x06U, 0x53U, 0x70U, 0x86U, 0x0eU, 0xf9U, 0x07U, 0xbaU,
    0x05U, 0x3cU, 0xd4U, 0x19U, 0xe2U, 0xa1U, 0x60U, 0x0fU, 0xd9U, 0x82U, 0xa7U, 0x9aU,
    0x36U, 0xb8U, 0x93U, 0xf1U, 0xe6U, 0xc1U, 0x86U, 0x2eU, 0x85U, 0xd8U, 0x1eU, 0x0cU,
    0xf9U, 0x07U, 0xbaU, 0xb5U, 0x9bU, 0x0dU, 0xc5U, 0xc3U, 0x41U, 0x3bU, 0x74U, 0xa8U,
    0xf1U, 0x96U, 0x6eU, 0xc1U, 0xc5U, 0x43U, 0x97U, 0xebU, 0x52U, 0x5dU, 0x74U, 0xb2U,
    0xa4U, 0xd3U, 0x8fU, 0x77U, 0xb6U, 0x0bU, 0xf7U, 0xe0U, 0x88U, 0x7cU, 0xb9U, 0xa7U,
    0xefU, 0xbdU, 0x27U, 0xe9U, 0x49U, 0xefU, 0x43U, 0x19U, 0x40U, 0x16U, 0x37U, 0xe7U,
    0x06U, 0xaaU, 0xdfU, 0xceU, 0xefU, 0xe6U, 0x99U, 0x55U, 0xe3U, 0xb3U, 0x98U, 0x0eU,
    0xa6U, 0x03U, 0x44U, 0x77U, 0xfbU, 0xe2U, 0x0cU, 0x00U, 0x00U, 0x1eU, 0x3cU, 0x7fU,
    0x2dU, 0xd4U, 0xfdU, 0x75U, 0x7eU, 0x82U, 0x1eU, 0x40U, 0x25U, 0xfcU, 0xf3U, 0x93U,
    0x80U, 0xd6U, 0x77U, 0xb0U, 0x1dU, 0x20U, 0xbaU, 0xaaU, 0xa3U, 0x45U, 0x3bU, 0x81U,
    0x8dU, 0xffU, 0xfbU, 0xebU, 0x87U, 0xa5U, 0x7eU, 0x1eU, 0x7dU, 0xfcU, 0x1cU, 0x09U,
    0x86U, 0x63U, 0xe3U, 0x40U, 0x9cU, 0xf0U, 0x0cU, 0xa0U, 0x0dU, 0xe1U, 0x39U, 0x81U,
    0x89U, 0xcfU, 0xdaU, 0xc1U, 0x13U, 0xc7U, 0x44U, 0x91U, 0x38U, 0xc4U, 0x8eU, 0xa0U,
    0x4eU, 0x3fU, 0x8bU, 0x76U, 0xcfU, 0xd8U, 0x70U, 0x1dU, 0xfcU, 0x38U, 0x1cU, 0x47U,
    0x25U, 0x82U, 0x3aU, 0x23U, 0xa8U, 0x03U, 0xaeU, 0x9aU, 0x04U, 0x6dU, 0xf0U, 0x6fU,
    0x2eU, 0x4bU, 0x70U, 0xdaU, 0xeaU, 0xc3U, 0xcdU, 0x65U, 0x09U, 0x00U, 0x00U, 0x4eU,
    0x5bU, 0x7dU, 0xf0U, 0x3bU, 0x75U, 0xf0U, 0xaaU, 0x8dU, 0xe5U, 0x1cU, 0x20U, 0x72U,
    0x60U, 0x01U, 0x3dU, 0xe5U, 0xe9U, 0xb6U, 0x68U, 0xf7U, 0x42U, 0x00U, 0x1aU, 0x94U,
    0x67U, 0x80U, 0x4aU, 0x5fU, 0xb6U, 0xf8U, 0x07U, 0x7bU, 0xbbU, 0x00U, 0x00U, 0xe1U,
    0x5fU, 0x56U, 0xb2U, 0xbcU, 0x0eU, 0x46U, 0x47U, 0x3bU, 0x61U, 0xf4U, 0x88U, 0xe1U,
    0x6cU, 0x5bU, 0x34U, 0x82U, 0x5eU, 0x21U, 0x1fU, 0x3aU, 0x77U, 0xb0U, 0xb7U, 0x1bU,
    0x31U, 0x40U, 0x64U, 0x84U, 0x2eU, 0xbeU, 0xdfU, 0xa9U, 0x2bU, 0xe3U, 0xd3U, 0xdfU,
    0xb3U, 0x6dU, 0xeeU, 0x12U, 0xe0U, 0x75U, 0x20U, 0x6bU, 0xf3U, 0xc4U, 0x2bU, 0xe4U,
    0x23U, 0xbfU, 0x65U, 0x06U, 0x98U, 0xe0U, 0xc7U, 0x09U, 0x8bU, 0x2fU, 0x93U, 0xa5U,
    0x7dU, 0x94U, 0x56U, 0x1eU, 0x94U, 0x5fU, 0x8aU, 0x41U, 0xfeU, 0xadU, 0x21U, 0xdeU,
    0xd6U, 0x16U, 0x67U, 0x80U, 0x3fU, 0x9eU, 0x28U, 0xe9U, 0xaeU, 0x02U, 0x1fU, 0xddU,
    0x81U, 0xedU, 0x8bU, 0x33U, 0x58U, 0xb4U, 0x7bU, 0x4bU, 0xdbU, 0x19U, 0x79U, 0x37U,
    0x3aU, 0xdaU, 0x11U, 0x1aU, 0x6fU, 0x8bU, 0xafU, 0x73U, 0x90U, 0xe2U, 0x06U, 0x40U,
    0xc5U, 0x81U, 0x45U, 0xbbU, 0x27U, 0x74U, 0x9eU, 0x24U, 0x1fU, 0xd1U, 0x5eU, 0x4eU,
    0xefU, 0x0aU, 0xa6U, 0x01U, 0x14U, 0xe1U, 0x9bU, 0xeaU, 0x67U, 0x54U, 0x94U, 0x75U,
    0x82U, 0x00U, 0x00U, 0xd0U, 0x2cU, 0x3eU, 0x0dU, 0xdfU, 0x55U, 0xdeU, 0xfeU, 0x01U,
    0x00U, 0x80U, 0xeeU, 0xd5U, 0x16U, 0xd4U, 0x86U, 0x33U, 0x28U, 0x96U, 0x2aU, 0x30U,
    0xecU, 0x77U, 0xb9U, 0xc7U, 0x58U, 0x95U, 0x00U, 0xd2U, 0x5bU, 0x98U, 0xaaU, 0xf3U,
    0x32U, 0xfbU, 0x23U, 0x49U, 0x70U, 0x74U, 0xb4U, 0x03U, 0x1eU, 0x00U, 0xbcU, 0xbbU,
    0xfdU, 0xc2U, 0x77U, 0x80U, 0xfaU, 0x46U, 0x36U, 0x75U, 0xafU, 0xa7U, 0xf7U, 0xefU,
    0xafU, 0xcbU, 0x74U, 0x72U, 0x7aU, 0x28U, 0x9dU, 0x92U, 0x5eU, 0xb5U, 0x11U, 0x40U,
    0x0cU, 0xbeU, 0x6cU, 0xf9U, 0x98U, 0xd8U, 0xcfU, 0x2dU, 0x26U, 0x44U, 0x6bU, 0xd0U,
    0x1fU, 0x4fU, 0xa4U, 0xd3U, 0xb7U, 0x58U, 0xaaU, 0xc0U, 0xf7U, 0x1fU, 0xa3U, 0xc8U,
    0xb7U, 0xdcU, 0x5dU, 0x21U, 0x66U, 0x0dU, 0xcbU, 0xf0U, 0x65U, 0x87U, 0x27U, 0x13U,
    0xfbU, 0x1dU, 0x76U, 0x14U, 0xe8U, 0x24U, 0x42U, 0x14U, 0xe8U, 0x0eU, 0xe3U, 0x4eU,
    0x6fU, 0xb4U, 0xe3U, 0xa4U, 0x3fU, 0xfaU, 0x9dU, 0x8eU, 0xf0U, 0xf0U, 0xe3U, 0x12U,
    0x9bU, 0xaeU, 0xfdU, 0x59U, 0x51U, 0x67U, 0x87U, 0xfbU, 0xc7U, 0x50U, 0x2cU, 0x55U,
    0x96U, 0x7eU, 0xcbU, 0xb2U, 0xecU, 0xb0U, 0xdfU, 0x0dU, 0x41U, 0x08U, 0x10U, 0x69U,
    0xb3U, 0x4fU, 0x9cU, 0x33U, 0x26U, 0xf8U, 0x26U, 0xfaU, 0x6bU, 0x27U, 0x24U, 0xd6U,
    0x4dU, 0xa8U, 0x38U, 0x49U, 0x38U, 0xafU, 0x43U, 0x48U, 0x60U, 0xf3U, 0x11U, 0x6bU,
    0x0dU, 0x80U, 0x09U, 0x21U, 0xc1U, 0x06U, 0xc1U, 0x86U, 0x50U, 0xd9U, 0x88U, 0x00U,
    0xe8U, 0x12U, 0x12U, 0xd8U, 0x84U, 0xcaU, 0xc6U, 0x05U, 0x40U, 0x85U, 0xf8U, 0xc0U,
    0x24U, 0x54U, 0x74U, 0x73U, 0x88U, 0xb3U, 0x0aU, 0xe7U, 0x49U, 0x19U, 0x4bU, 0xe4U,
    0xb4U, 0xd5U, 0x57U, 0x4aU, 0x62U, 0xbaU, 0x84U, 0x8aU, 0x49U, 0x0eU, 0xc9U, 0x26U,
    0xe1U, 0x34U, 0x5bU, 0xcfU, 0x9fU, 0xb6U, 0xfaU, 0x21U, 0x1fU, 0x40U, 0x08U, 0x11U,
    0x55U, 0x7dU, 0xf2U, 0xadU, 0xdfU, 0xa9U, 0x47U, 0xdaU, 0x2aU, 0x39U, 0x68U, 0x2dU,
    0x4bU, 0x40U, 0x54U, 0xcfU, 0xafU, 0x4aU, 0x5fU, 0x97U, 0x53U, 0x4cU, 0x64U, 0x09U,
    0xd8U, 0x10U, 0x22U, 0x18U, 0xfaU, 0x3aU, 0x9cU, 0x22U, 0xeaU, 0x41U, 0x68U, 0x3aU,
    0x68U, 0x06U, 0x5eU, 0xb5U, 0x01U, 0x2aU, 0xf5U, 0xbcU, 0xdfU, 0xa9U, 0xc3U, 0xb3U,
    0x57U, 0x35U, 0x63U, 0x3eU, 0x82U, 0xa7U, 0x4fU, 0x2aU, 0x42U, 0x9dU, 0x04U, 0x8cU,
    0x1aU, 0x80U, 0x75U, 0xd4U, 0xf3U, 0xbcU, 0x24U, 0xc8U, 0x92U, 0xa2U, 0x5eU, 0xb5U,
    0x11U, 0xceU, 0x1cU, 0xd2U, 0x26U, 0x55U, 0x25U, 0x6aU, 0x12U, 0x9cU, 0xdfU, 0xcdU,
    0x33U, 0xa2U, 0x7aU, 0x5cU, 0xc5U, 0x78U, 0xbfU, 0x53U, 0x07U, 0x53U, 0x7dU, 0xd3U,
    0x1cU, 0x92U, 0x48U, 0x2dU, 0xc0U, 0x12U, 0x22U, 0xddU, 0xabU, 0x2dU, 0x00U, 0x00U,
    0xa8U, 0x0dU, 0x67U, 0x4aU, 0xe5U, 0x2cU, 0xabU, 0xffU, 0xa2U, 0xfcU, 0x44U, 0xa9U,
    0x1cU, 0x66U, 0x97U, 0x90U, 0x0aU, 0xa7U, 0x98U, 0x49U, 0x22U, 0x09U, 0x8aU, 0xd6U,
    0xb1U, 0x8cU, 0x4fU, 0x10U, 0xe9U, 0xf9U, 0xe3U, 0x09U, 0x78U, 0x85U, 0x3cU, 0x1cU,
    0xeeU, 0x1fU, 0x87U, 0x15U, 0xa7U, 0x2aU, 0x1fU, 0xc8U, 0xebU, 0x4bU, 0xcaU, 0x09U,
    0x62U, 0x07U, 0x80U, 0x36U, 0x9aU, 0x94U, 0xa6U, 0x71U, 0x0eU, 0x10U, 0x52U, 0x45U,
    0xc6U, 0x21U, 0xc4U, 0xe5U, 0x10U, 0x42U, 0xbcU, 0x2eU, 0x0dU, 0x40U, 0xa7U, 0x0eU,
    0xc7U, 0xdfU, 0x7eU, 0xc2U, 0xedU, 0xfbU, 0x4eU, 0x26U, 0xb1U, 0x25U, 0x60U, 0x53U,
    0x12U, 0x93U, 0x00U, 0xd0U, 0xbcU, 0x82U, 0x29U, 0xb6U, 0x57U, 0xc8U, 0x2fU, 0x11U,
    0x22U, 0xbcU, 0x19U, 0x98U, 0x48U, 0x00U, 0x6cU, 0x03U, 0x67U, 0x53U, 0xe1U, 0xf1U,
    0x66U, 0x9fU, 0x6cU, 0x09U, 0x65U, 0xd6U, 0x4dU, 0x48U, 0x6cU, 0x14U, 0x21U, 0xf2U,
    0x5fU, 0xdcU, 0xf0U, 0x48U, 0x9aU, 0x10U, 0xd9U, 0xa4U, 0x1bU, 0x1eU, 0xabU, 0x20U,
    0x44U, 0xb2U, 0x71U, 0xc5U, 0x84U, 0xa8U, 0xa0U, 0x88U, 0x30U, 0x3bU, 0x16U, 0xd5U,
    0x18U, 0x36U, 0x7eU, 0x22U, 0x84U, 0xc8U, 0x3aU, 0x6fU, 0x78U, 0xd8U, 0xe0U, 0x5bU,
    0x07U, 0x60U, 0x13U, 0x6eU, 0x78U, 0xacU, 0x34U, 0x09U, 0xbbU, 0x39U, 0x37U, 0x70U,
    0x73U, 0x6eU, 0x30U, 0x1dU, 0x34U, 0x03U, 0x37U, 0xe7U, 0x06U, 0x9fU, 0x1aU, 0x95U,
    0xb0U, 0x3dU, 0x1dU, 0x34U, 0x23U, 0x6dU, 0x5eU, 0xb2U, 0x73U, 0x73U, 0x6eU, 0xf0U,
    0xf8U, 0x4dU, 0x35U, 0x7cU, 0x48U, 0x7fU, 0xb2U, 0x07U, 0x13U, 0x1fU, 0x25U, 0x07U,
    0xd8U, 0x12U, 0x12U, 0x3aU, 0x8cU, 0x8eU, 0xeaU, 0x0dU, 0x8fU, 0x24U, 0xc5U, 0xc1U,
    0x26U, 0x24U, 0x30U, 0x1cU, 0xc0U, 0x26U, 0x44U, 0xb4U, 0xaaU, 0xc1U, 0x75U, 0xdeU,
    0xf0U, 0xc0U, 0x20U, 0x54U, 0x50U, 0x02U, 0x60U, 0x73U, 0x0aU, 0x4bU, 0xfaU, 0x86U,
    0x89U, 0x0aU, 0x27U, 0x60U, 0x1cU, 0x00U, 0x0cU, 0x03U, 0xd8U, 0xc3U, 0x90U, 0x28U,
    0xa3U, 0xc7U, 0x55U, 0x74U, 0xa2U, 0xfcU, 0x82U, 0x9dU, 0xf9U, 0x51U, 0x6fU, 0x88U,
    0x60U, 0x38U, 0x60U, 0x43U, 0xa8U, 0x58U, 0x27U, 0x41U, 0x9bU, 0x1bU, 0x22U, 0xb4U,
    0xc8U, 0xf4U, 0x55U, 0x96U, 0x56U, 0x6dU, 0x38U, 0xbbU, 0xbfU, 0x6dU, 0x52U, 0xa6U,
    0xffU, 0x3bU, 0x43U, 0x39U, 0xfeU, 0x4aU, 0x97U, 0x00U, 0x2fU, 0x0bU, 0xabU, 0x32U,
    0x3aU, 0x71U, 0x39U, 0x40U, 0x85U, 0xd2U, 0xb2U, 0x21U, 0x54U, 0xacU, 0x67U, 0x00U,
    0xc6U, 0x0dU, 0x11U, 0x5eU, 0xc0U, 0x68U, 0x7dU, 0xd5U, 0x11U, 0xf4U, 0xc7U, 0x93U,
    0x08U, 0x2bU, 0x44U, 0x48U, 0x12U, 0x6cU, 0x41U, 0xbdU, 0x21U, 0xa2U, 0xa2U, 0xafU,
    0xbaU, 0xc3U, 0xc8U, 0x1eU, 0x48U, 0x25U, 0x95U, 0x54U, 0x52U, 0x49U, 0x25U, 0x95U,
    0x54U, 0x52U, 0x49U, 0x25U, 0x95U, 0x54U, 0x52U, 0x49U, 0xc5U, 0x4eU, 0xfeU, 0x02U,
    0x69U, 0x91U, 0xabU, 0x8dU, 0x60U, 0x33U, 0x68U, 0x89U, 0x00U, 0x00U, 0x00U, 0x00U,
    0x49U, 0x45U, 0x4eU, 0x44U, 0xaeU, 0x42U, 0x60U, 0x82U,
});

static inline gdk::model_data make_quad() { 
    return {{
        { 
            "a_Position",
            {
                {
                    1.0f, 1.0f, 0.0f,
                    0.0f, 1.0f, 0.0f,
                    0.0f, 0.0f, 0.0f,
                    1.0f, 1.0f, 0.0f,
                    0.0f, 0.0f, 0.0f,
                    1.0f, 0.0f, 0.0f,
                },
                3
            }
        },
        { 
            "a_UV",
            {
                {
                    1, 0,
                    0, 0,
                    0, 1,
                    1, 0,
                    0, 1,
                    1, 1,
                },
                2
            }
        }
    }};
}

int main(int argc, char **argv) {
    glfw_window window("basic rendering demo");

    jfc::event<float, float> update_event;

    const auto pGraphics = webgl1es2_context::make();
    const auto pScene = pGraphics->make_scene();

    const auto pCamera = [&]() {
        auto pCamera = pGraphics->make_camera();
        pCamera->set_clear_color(color::cornflower_blue);
        pScene->add(pCamera);
        update_event.subscribe([pCamera, &window](float time, float deltaTime) {
            pCamera->set_orthographic_projection(1.0, 1.0, -0.1, 10., window.getAspectRatio());
        });
        return pCamera;
    }();

    const auto pTexture = [&]() {
        auto [view, data] = texture_data::make_from_png(PNG);
        auto p = pGraphics->make_texture(view,
            texture::wrap_mode::clamped,
            texture::wrap_mode::clamped);
        return p;
    }();

    const auto pShader = pGraphics->get_alpha_cutoff_shader();

    const auto pMaterial = [&]() {
        auto p(pGraphics->make_material(pShader, material::render_mode::opaque));
        p->set_texture("_Texture", pTexture);
        p->set_vector2("_UVScale", {1, 1});
        p->set_vector2("_UVOffset", {0, 0});
        return p;
    }();

    const auto pModel = pGraphics->make_model();

    const auto pEntity = [&]() {
        auto p = pGraphics->make_entity(pModel, pMaterial);
        p->set_transform({0., 0., 0.}, {});
        pScene->add(p);
        return p;
    }();

    pCamera->set_transform({0}, {});
    pEntity->set_transform({0,0,0}, {{0,0,0}}, {1,1,1});

    gdk::sprite_animation walk({
        {0.0f, { 0, 0, 16, 17}},
        {0.5f, {16, 0, 16, 17}},
    });

    game_loop(60, [&](const float time, const float deltaTime) {
        glfwPollEvents();
        update_event.notify(time, deltaTime);

        auto frame = walk.at(time, 64, 64);

        auto vertexData = make_quad();
        vertexData.transform("a_Position", {-0.5, -0.5, 0});
        vertexData.transform("a_UV", {frame.u, frame.v}, 0, {frame.w, frame.h});
        pModel->upload(model::usage_hint::streaming, vertexData);
       
        pScene->draw(window.getWindowSize());
        window.swapBuffer(); 
        return window.shouldClose();
    });

    return EXIT_SUCCESS;
}

